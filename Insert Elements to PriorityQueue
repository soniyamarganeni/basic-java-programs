Write a java program using the collection to display the following output:

Methods: 

add() - Inserts the specified element to the queue. If the queue is full, it throws an exception.
offer() - Inserts the specified element to the queue. If the queue is full, it returns false.

Sample Output: 
PriorityQueue: [2, 4]
Updated PriorityQueue: [1, 4, 2]
//Code here
import java.io.*;
import java.util.*;
public class Main
{
    public static void main(String args[])
    {
        PriorityQueue<Integer> q=new PriorityQueue<Integer>();
        q.add(2);
        q.add(4);
        System.out.println("PriorityQueue: "+q);
        if(q.offer(1))// q.add(1);
        System.out.print("Updated PriorityQueue: "+q);
        else
        System.out.println("false");
    }//Code here
}
/*
        if (Q.offer(10))
            System.out.println("The Queue is not full"
                               + " and 10 is inserted");
        else
            System.out.println("The Queue is full");
  
        if (Q.offer(15))
            System.out.println("The Queue is not full"
                               + " and 15 is inserted");
        else
            System.out.println("The Queue is full");
  
        if (Q.offer(25))
            System.out.println("The Queue is not full"
                               + " and 25 is inserted");
        else
            System.out.println("The Queue is full");
  
        if (Q.offer(20))
            System.out.println("The Queue is not full"
                               + " and 20 is inserted");
        else
            System.out.println("The Queue is full");
  
        // before removing print Queue
        System.out.println("Queue: " + Q);
    }
}
Output:
The Queue is not full and 10 is inserted
The Queue is not full and 15 is inserted
The Queue is not full and 25 is inserted
The Queue is full
Queue: [10, 15, 25]
*/
